// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    SelChip(load = load, inc = inc, reset = reset, addLoad = addLoad, addOld = addOld, addOne = addOne, kickRegister = kickRegister);
    Mux16(a[0..15] = false, b = old, sel = addOld, out = oldOut);
    Mux16(a[0..15] = false, b = in, sel = addLoad, out = loadOut);
    Mux16(a[0..15] = false, b[0] = true, b[1..15] = false, sel = addOne, out = oneOut);
    Or16(a = oldOut, b = loadOut, out = sum1);
    Add16(a = oneOut, b = sum1, out = sum2);
    Register(in = sum2, load = kickRegister, out = out, out = old);
}
