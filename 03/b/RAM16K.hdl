// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[9..11]], a = adr0, b = adr1, c = adr2, d = adr3, e = adr4, f = adr5, g = adr6, h = adr7);
    RAM512(in = in,  load = adr0, address = address[0..8],out = val0);
    RAM512(in = in,  load = adr1, address = address[0..8],out = val1);
    RAM512(in = in,  load = adr2, address = address[0..8],out = val2);
    RAM512(in = in,  load = adr3, address = address[0..8],out = val3);
    RAM512(in = in,  load = adr4, address = address[0..8],out = val4);
    RAM512(in = in,  load = adr5, address = address[0..8],out = val5);
    RAM512(in = in,  load = adr6, address = address[0..8],out = val6);
    RAM512(in = in,  load = adr7, address = address[0..8],out = val7);
    Mux8Way16(a = val0, b = val1, c = val2, d = val3, e = val4, f = val5, g = val6, h = val7, sel = address[9..11]], out = out);
}